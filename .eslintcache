[{"C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\index.js":"1","C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\reportWebVitals.js":"2","C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\App.js":"3","C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\components\\itemsList.js":"4","C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\store\\action\\action.js":"5","C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\store\\index.js":"6","C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\store\\reducer\\index.js":"7","C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\store\\reducer\\reducer.js":"8","C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\components\\shoppingCart.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":631,"mtime":1607326068788,"results":"13","hashOfConfig":"11"},{"size":5043,"mtime":1607334296600,"results":"14","hashOfConfig":"11"},{"size":261,"mtime":1607322554672,"results":"15","hashOfConfig":"11"},{"size":239,"mtime":1607322524425,"results":"16","hashOfConfig":"11"},{"size":132,"mtime":1607322567364,"results":"17","hashOfConfig":"11"},{"size":716,"mtime":1607333760741,"results":"18","hashOfConfig":"11"},{"size":4626,"mtime":1607352407661,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1drlvlp",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\index.js",[],["41","42"],"C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\reportWebVitals.js",[],"C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\App.js",[],"C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\components\\itemsList.js",["43","44","45"],"import React, { Component } from 'react';\r\nimport Items from '../json/items.json';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { AddToReduxCart, IncrementCounter } from '../store/action/action.js';\r\nimport '../css/cartBadge.css';\r\n\r\nclass ItemsList extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            products: Items.items,\r\n            searchText: ''\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ searchText: e.target.value });\r\n    }\r\n\r\n    addItemToCart(i) {\r\n        const { products } = this.state;\r\n\r\n        var obj = {\r\n            name: products[i].name,\r\n            price: products[i].price,\r\n            imageURL: products[i].imageURL,\r\n            quantity: 1,\r\n            total_price: products[i].price\r\n        }\r\n        this.props.addItem(obj);\r\n        var value = this.props.counterValue + 1;\r\n        this.props.IncCounter(value);\r\n    }\r\n\r\n    render() {\r\n        const { products } = this.state;\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg fixed-top\" style={{ textAlign: 'center', float: 'none', display: 'inline-block', backgroundColor: '#007BFF' }}>\r\n                    <Link to=\"/cart\">\r\n                        <button style={{ float: \"right\" , backgroundColor : \"transparent\" , border : \"none\"}}>\r\n                            <i className=\"fa\" style={{ fontSize: \"34px\" }}>&#xf07a;</i>\r\n                            <span className='badge badge-warning' id='lblCartCount'> {this.props.counterValue} </span>\r\n                        </button>\r\n                    </Link>\r\n                </nav>\r\n\r\n                <br /><br /><br /><br />\r\n\r\n                <div className=\"container\">\r\n\r\n                    <br />\r\n                    <div className=\"row\" style={{ textAlign: \"center\" }}>\r\n                        <div className=\"col-sm-1\">\r\n\r\n                        </div>\r\n                        <div className=\"col-sm-9\">\r\n                            <input type=\"text\" placeholder=\"Search Products\" onChange={this.onChange} className=\"form-control animate__animated animate__zoomInDown\" style={{ margin: '2px' }} ></input>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n\r\n                    <div className=\"row\">\r\n                        {\r\n                            products.map((val, ind) => {\r\n                                const { searchText } = this.state;\r\n\r\n                                if (searchText !== \"\" && val.name.toLowerCase().indexOf(searchText.toLowerCase()) === -1) {\r\n                                    return null;\r\n                                }\r\n\r\n                                return (\r\n                                    <div className=\"card mx-2 my-2 shadow-lg p-3 mb-5 bg-white rounded\" key={ind} style={{ width: '345px', alignItems: 'center' }}>\r\n\r\n                                        {/* src={require('../images/colgate.jpg').default} */}\r\n                                        <img src={val.imageURL} className=\"card-img-top\" style={{ height: '240px', width: '240px' }} alt=\"product image\" />\r\n                                        <div className=\"card-body\" style={{ backgroundColor: '#a6b0bf', width: '100%', textAlign: 'center' }}>\r\n                                            <h5 className=\"card-title\">{val.name}</h5>\r\n                                            <p className=\"card-text\">${val.price}</p>\r\n\r\n                                            {(val.availability == 'In Stock') &&\r\n                                                <div>\r\n                                                    <p className=\"card-text\" style={{ color: \"green\", fontWeight: 'bold' }}>{val.availability}</p>\r\n                                                    <button type=\"button\" onClick={() => this.addItemToCart(ind)} style={{ width: '120px' }} className=\"btn btn-primary\">Add to Cart</button>\r\n                                                </div>}\r\n\r\n                                            {(val.availability == 'Out of Stock') &&\r\n                                                <p className=\"card-text\" style={{ color: \"red\", fontWeight: 'bold' }}>{val.availability}</p>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProp(state) {\r\n    return ({\r\n        // jb class me data mangwana hota hy store se\r\n        counterValue: state.root.reduxCartCounter\r\n    })\r\n}\r\n\r\nfunction mapDispatchToProp(dispatch) {\r\n    return ({\r\n        // jb class se data store me bhejna hota hai\r\n        addItem: (data) => { dispatch(AddToReduxCart(data)) },\r\n        IncCounter: (i) => { dispatch(IncrementCounter(i)) }\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProp, mapDispatchToProp)(ItemsList);","C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\store\\action\\action.js",[],"C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\store\\index.js",[],"C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\store\\reducer\\index.js",[],"C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\store\\reducer\\reducer.js",["46"],"const INITIAL_STATE = {\r\n    reduxCart: [],\r\n    reduxCartCounter: 0\r\n}\r\n\r\n// Use Case To Check the triggered Function of Action.js and set the triggered function value init respective obeject or variable  \r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'ADDITEM':\r\n            return {\r\n                ...state,\r\n                reduxCart: [action.payload, ...state.reduxCart]\r\n                //reduxCart: [...state.reduxCart , action.payload]\r\n            }\r\n\r\n        case 'ADDCOUNTER':\r\n            return ({\r\n                ...state,\r\n                reduxCartCounter: action.payload\r\n            })\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\components\\shoppingCart.js",["47"],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":78,"column":41,"nodeType":"54","endLine":78,"endColumn":156},{"ruleId":"55","severity":1,"message":"56","line":83,"column":64,"nodeType":"57","messageId":"58","endLine":83,"endColumn":66},{"ruleId":"55","severity":1,"message":"56","line":89,"column":64,"nodeType":"57","messageId":"58","endLine":89,"endColumn":66},{"ruleId":"59","severity":1,"message":"60","line":7,"column":1,"nodeType":"61","endLine":27,"endColumn":2},{"ruleId":"52","severity":1,"message":"53","line":55,"column":85,"nodeType":"54","endLine":55,"endColumn":173},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]