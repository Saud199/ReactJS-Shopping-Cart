[{"C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\index.js":"1","C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\reportWebVitals.js":"2","C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\App.js":"3","C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\components\\itemsList.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":453,"mtime":1607151915793,"results":"8","hashOfConfig":"6"},{"size":3889,"mtime":1607261894573,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1drlvlp",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\index.js",[],["20","21"],"C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\reportWebVitals.js",[],"C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\App.js",[],"C:\\Users\\EliteBook 8470p\\Desktop\\cart\\reactcart\\src\\components\\itemsList.js",["22","23","24"],"import React, { Component } from 'react';\r\nimport Items from '../json/items.json';\r\n\r\nclass ItemsList extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            products: Items.items,\r\n            searchText: ''\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ searchText: e.target.value })\r\n    }\r\n\r\n    render() {\r\n        const { products } = this.state;\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg fixed-top\" style={{ textAlign: 'center', float: 'none', display: 'inline-block' , backgroundColor : '#007BFF'}}>\r\n                    {/* <img src={Logo} className=\"card-img-top\" style={{width: '300px' , height : '80px'}} alt=\"Logo\" /> */}\r\n                    <div style={{ float: \"right\" }}>\r\n                        <i className=\"fa\" style={{ fontSize: \"34px\" }}>&#xf07a;</i>\r\n                        <span className='badge badge-warning' id='lblCartCount'> 0 </span>\r\n                    </div>\r\n                </nav>\r\n\r\n                <br /><br /><br /><br />\r\n\r\n                <div className=\"container\">\r\n\r\n                    <br />\r\n                    <div className=\"row\" style={{ textAlign: \"center\" }}>\r\n                        <div className=\"col-sm-1\">\r\n\r\n                        </div>\r\n                        <div className=\"col-sm-9\">\r\n                            <input type=\"text\" placeholder=\"Search Products\" onChange={this.onChange} className=\"form-control animate__animated animate__zoomInDown\" style={{ margin: '2px' }} ></input>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n\r\n                    <div className=\"row\">\r\n                        {\r\n                            products.map((val, ind) => {\r\n                                const { searchText } = this.state;\r\n\r\n                                if (searchText !== \"\" && val.name.toLowerCase().indexOf(searchText.toLowerCase()) === -1) {\r\n                                    return null;\r\n                                }\r\n\r\n                                return (\r\n                                    <div className=\"card mx-2 my-2 shadow-lg p-3 mb-5 bg-white rounded\" key={ind} style={{ width: '345px', alignItems: 'center' }}>\r\n\r\n                                        {/* src={require('../images/colgate.jpg').default} */}\r\n                                        <img src={val.imageURL} className=\"card-img-top\" style={{ height: '240px', width: '240px' }} alt=\"product image\" />\r\n                                        <div className=\"card-body\" style={{ backgroundColor: '#a6b0bf', width: '100%', textAlign: 'center' }}>\r\n                                            <h5 className=\"card-title\">{val.name}</h5>\r\n                                            <p className=\"card-text\">${val.price}</p>\r\n\r\n                                            {(val.availability == 'In Stock') &&\r\n                                                <div>\r\n                                                    <p className=\"card-text\" style={{ color: \"green\", fontWeight: 'bold' }}>{val.availability}</p>\r\n                                                    <button type=\"button\" style={{ width: '120px' }} className=\"btn btn-primary\">Add to Cart</button>\r\n                                                </div>}\r\n\r\n                                            {(val.availability == 'Out of Stock') &&\r\n                                                <p className=\"card-text\" style={{ color: \"red\", fontWeight: 'bold' }}>{val.availability}</p>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemsList;",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":58,"column":41,"nodeType":"31","endLine":58,"endColumn":156},{"ruleId":"32","severity":1,"message":"33","line":63,"column":64,"nodeType":"34","messageId":"35","endLine":63,"endColumn":66},{"ruleId":"32","severity":1,"message":"33","line":69,"column":64,"nodeType":"34","messageId":"35","endLine":69,"endColumn":66},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]